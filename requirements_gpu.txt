# GPU-accelerated machine learning requirements for Advanced Forex Trading Model

# Core PyTorch with CUDA support
torch>=2.0.0
torchvision>=0.15.0

# Core ML and data libraries
pandas>=1.5.0
numpy>=1.24.0
scikit-learn>=1.3.0

# Visualization
matplotlib>=3.6.0
seaborn>=0.12.0
plotly>=5.15.0

# Progress bars and utilities
tqdm>=4.65.0

# Data processing
MetaTrader5>=5.0.0

# GPU acceleration options (choose based on your setup)
# Option 1: XGBoost with GPU support (RECOMMENDED - easiest to install)
xgboost>=1.7.0

# Option 2: LightGBM with GPU support
lightgbm>=3.3.0

# Option 3: CatBoost with GPU support  
catboost>=1.2.0

# MEDIUM-IMPACT OPTIMIZATIONS - ADVANCED FEATURES

# ONNX for model export and MetaTrader integration
onnx>=1.14.0
onnxruntime>=1.15.0
onnxruntime-gpu>=1.15.0  # GPU version for faster inference

# Advanced model architectures and utilities
transformers>=4.30.0  # For transformer components
einops>=0.6.0  # Tensor operations
timm>=0.9.0  # PyTorch image models (useful components)

# Model quantization and optimization
torch-tensorrt  # TensorRT integration for NVIDIA GPUs (optional)

# Advanced metrics and evaluation
torchmetrics>=0.11.0

# Data augmentation
albumentations>=1.3.0  # Advanced augmentation techniques

# Model serving and deployment
fastapi>=0.100.0  # API serving
uvicorn>=0.22.0  # ASGI server
pydantic>=2.0.0  # Data validation

# Hyperparameter optimization
optuna>=3.2.0  # Hyperparameter tuning
ray[tune]>=2.5.0  # Distributed hyperparameter tuning

# Memory optimization
psutil>=5.9.0  # System monitoring
memory-profiler>=0.60.0  # Memory usage tracking

# Advanced visualization
wandb>=0.15.0  # Experiment tracking
tensorboard>=2.13.0  # TensorBoard integration

# Financial data processing
yfinance>=0.2.0  # Financial data
ta>=0.10.0  # Technical analysis indicators
TA-Lib>=0.4.0  # Technical analysis library

# Parallel processing
joblib>=1.3.0
multiprocessing-on-dill>=3.5.0

# Configuration management
hydra-core>=1.3.0
omegaconf>=2.3.0

# Model versioning and MLOps
mlflow>=2.4.0  # Model lifecycle management
dvc>=3.0.0  # Data version control

# RAPIDS cuML (NVIDIA GPUs only - advanced option)
# Uncomment if you have NVIDIA GPU and want maximum acceleration
# cuml>=23.06.0
# cudf>=23.06.0
# cugraph>=23.06.0
# cuspatial>=23.06.0

# TensorFlow Decision Forests (alternative approach)
# tensorflow>=2.13.0
# tensorflow-decision-forests>=1.4.0

# Installation Notes:
# 1. Install PyTorch first: pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118
# 2. For best performance: pip install -r requirements_gpu.txt
# 3. For RAPIDS: Use conda environment: conda install -c rapidsai -c nvidia -c conda-forge cuml=23.06 python=3.10 cudatoolkit=11.8
# 4. Some packages may require specific CUDA versions - check compatibility
# 5. For minimal installation, install only: torch, pandas, numpy, scikit-learn, onnx, onnxruntime 